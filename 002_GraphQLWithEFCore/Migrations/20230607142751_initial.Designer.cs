// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _002_GraphQLWithEFCore.Database;

#nullable disable

namespace _002_GraphQLWithEFCore.Migrations
{
    [DbContext(typeof(GraphQLAppDbContext))]
    [Migration("20230607142751_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_002_GraphQLEssentials.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("ExpiryDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVC = "345",
                            CustomerId = 1,
                            ExpiryDate = "08/26",
                            Number = "1234-2345-3445-3456"
                        },
                        new
                        {
                            Id = 2,
                            CVC = "345",
                            CustomerId = 2,
                            ExpiryDate = "08/26",
                            Number = "1234-2345-3445-3456"
                        },
                        new
                        {
                            Id = 3,
                            CVC = "123",
                            CustomerId = 3,
                            ExpiryDate = "09/25",
                            Number = "3344-7654-3445-3456"
                        },
                        new
                        {
                            Id = 4,
                            CVC = "234",
                            CustomerId = 4,
                            ExpiryDate = "07/24",
                            Number = "5566-5454-3445-3456"
                        },
                        new
                        {
                            Id = 5,
                            CVC = "987",
                            CustomerId = 1,
                            ExpiryDate = "06/26",
                            Number = "6677-3232-3445-3456"
                        },
                        new
                        {
                            Id = 6,
                            CVC = "654",
                            CustomerId = 1,
                            ExpiryDate = "05/27",
                            Number = "8899-9898-3445-3456"
                        },
                        new
                        {
                            Id = 7,
                            CVC = "432",
                            CustomerId = 2,
                            ExpiryDate = "04/28",
                            Number = "9900-5678-3445-3456"
                        },
                        new
                        {
                            Id = 8,
                            CVC = "165",
                            CustomerId = 1,
                            ExpiryDate = "03/23",
                            Number = "1122-5678-3445-3456"
                        },
                        new
                        {
                            Id = 9,
                            CVC = "651",
                            CustomerId = 2,
                            ExpiryDate = "02/29",
                            Number = "2233-2543-3445-3456"
                        },
                        new
                        {
                            Id = 10,
                            CVC = "987",
                            CustomerId = 3,
                            ExpiryDate = "01/26",
                            Number = "3544-1234-3445-3456"
                        });
                });

            modelBuilder.Entity("_002_GraphQLEssentials.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "id1@gmail.com",
                            Name = "Simon Baker"
                        },
                        new
                        {
                            Id = 2,
                            Email = "id2@gmail.com",
                            Name = "Hanayama Kaoru"
                        },
                        new
                        {
                            Id = 3,
                            Email = "id3@gmail.com",
                            Name = "Hanma Baki"
                        },
                        new
                        {
                            Id = 4,
                            Email = "id4@gmail.com",
                            Name = "O. Doppo"
                        });
                });

            modelBuilder.Entity("_002_GraphQLEssentials.Models.Card", b =>
                {
                    b.HasOne("_002_GraphQLEssentials.Models.Customer", "Customer")
                        .WithMany("Cards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("_002_GraphQLEssentials.Models.Customer", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
